// api/webhook.js

export default async function handler(req, res) {
  try {
    // ‚úÖ Telegram –≤—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
    if (req.method === "POST") {
      const body = req.body;

      console.log("üîπ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram:", body);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      if (body.message && body.message.text) {
        const chatId = body.message.chat.id;
        const userText = body.message.text.trim();

        let replyText = "";

        // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥
        if (userText === "/start") {
          replyText = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤ Sales Reporting System.\n–û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /report, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ.";
        } else if (userText === "/help") {
          replyText = "üìò –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/report ‚Äî –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö\n/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥";
        } else if (userText === "/report") {
          replyText = "üìä –û—Ç—á—ë—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –ø–æ–∫–∞ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è, –Ω–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!";
        } else {
          replyText = `–ü—Ä–∏–≤–µ—Ç! üëã –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${userText}"`;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            chat_id: chatId,
            text: replyText,
          }),
        });
      }

      // Telegram —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª 200 OK
      return res.status(200).json({ ok: true });
    }

    // –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–µ—Ç URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    return res.status(200).send("ü§ñ Telegram Webhook –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:", error);
    return res.status(500).json({ error: "Internal Server Error" });
  }
}
